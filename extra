https://code.visualstudio.com/download
https://github.com/Aakashdeveloper

Node Js

Single thread 
Non Blocking (its way it respond)
Async        (way it handle request)
I/O run over chrome v8 engine

REPL
Read Event Print Loop

 code
  ||
  \/
Machine Lang

////////////////////////////
open source> any body can contribute

npm > node package manager

JSON > JavaScript Object Notation
[
    {
        "name":"John",
        "city":"Paris"
    },
    {
        "name":"Amit",
        "city":"Amsterdam"
    }
]

package.json
>>>>>>>
> Starting point to application
> MetaData(name,description,version,author)
> script(start,dev,test)
> packages

>>>>>>>>>>><<<<<<<<<<<<<<<
Step to generate package.json
>>>>>>>>>>><<<<<<<<<<<<<<<
**NodeJs must be installed in system
> go inside the folder using cmd/terminal
> type npm init
> answer all questions
> type 'yes'

<<<<<<<<<<<<
packages
>>>>>>>>>>>>>>>>
local 
    > local to the folder
    > used in same folder/application
dev
    > local to the folder
    > used in same folder/application
    > we divide in category like this packages
       is only used for development
global
    > installed in system independent of any folder
    > it can be use by any application
    > they don't add in packages.json
    > need admin permission to installed
    > only package we use for running application
      or generating will go global

>>>>> How to install local <<<<<<<<<<  
> go inside folder where you want to install
  using cmd/terminal
> type npm i package name / npm install package name

>>>>> How to install Dev <<<<<<<<<<  
> go inside folder where you want to install
  using cmd/terminal
> type npm i package name --save-dev / npm install package name --save-dev

>>>>> How to install Global <<<<<<<<<<  
#window
> run cmd as admin
> npm i -g packagename

#mac/linux
> open terminal
> sudo npm i -g packagename


inbuilt nodeJs
os,fs,http

express


var a = 10
var b = "my age is "+a
"my age is 10"

//es6
var a = 10
var b = `My age is ${a}`
"my age is 10"

nodemon
npm i -g nodemon
nodemon http.js


C => post
R => get
U => put
D => delete

how to setup mongodb

#window
> download mongodb
    > https://www.mongodb.com/try/download/community
> install
> create one folder 
  in  C drive
      c/data/db
    
#mac
> download mongodb
    > https://www.mongodb.com/try/download/community
> install
> open terminal
> go to root
> make folder data/db


sno | English | Hindi | computer
 1  |         | 80    |
 2  |   80    |       |
 3  |         |  80   |  70


AccNo | Date | Amount | name

var students = [
    {
        sn:1,
        hindi:80
    },
    {
        sn:2,
        english:80
    },
    {
        sn:3,
        hindi:80,
        comp:70
    }
]

//start mongodb server
#window
> open cmd
> go inside folder
    c:/programmfile/mongodb/4.4/server/bin
> mongodb (27017)

//start mongodb client
> open cmd
> go inside folder
    c:/programmfile/mongodb/4.4/server/bin
> mongo 

#mac
# for server
> open terminal
> mongod --dbpath data/db

#for client
> open terminal
> mongo 

>>>>>>>>>>>>See all 

https://www.mongodb.com/cloud/atlas/lp/try2-in?utm_source=google&utm_campaign=gs_apac_india_search_core_brand_atlas_desktop&utm_term=atlas%20mongodb&utm_medium=cpc_paid_search&utm_ad=e&utm_ad_campaign_id=12212624347&gclid=CjwKCAiA65iBBhB-EiwAW253W1LEqfkqTLTf5TkWwcgN7v6cMB9RQ6njnEpVTMXN-ZFlCiFsnEKa-xoCqSsQAvD_BwE

CRUD
> Create
> Read
> Update 
> Delete

npm i ejs cors express mongodb body-parser chai chai-http mocha

JWT
OAuth with github
ImageUpload
Redis
graphql
Passport(oauth with google)
Deployment
> Heroku
testing
oo_nodejs
Lambda
> Docker
> nginx
login with express-session


websocket
postgres with node(optional)



npm i express jsonwebtoken cors body-parser bcryptjs mongoose

https://docs.github.com/en/developers/apps/authorizing-oauth-apps

npm i ejs express express-fileupload body-parser

https://redis.io/

npm i express redis axios

redis-server (6379)
redis-cli

KEYS *  /// all data
get keyname  //save data
set key value  //get data
del keyname  //delete data
FLUSHDB //delete all

//////////
dummy api
/////////
npm i -g  json-server
json-server --watch db.json --port 8900

npm i axios express express-graphql graphql 

http://www.passportjs.org/docs/google/

npm i ejs express express-session passport

npm i @babel/core @babel/register @babel/preset-env express mongodb


npm i @sendgrid/mail


docker build . -t edufeb
docker run -p 9000:8900 edufeb


npm i express express-session mongod