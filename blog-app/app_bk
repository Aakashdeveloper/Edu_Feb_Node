const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mongodb = require('mongodb');
const session = require('express-session');
const url = "mongodb://localhost:27017";
const port = process.env.PORT || 9700;
//make object of express so that you can use there methods
let app = express();
// use as a middleware for cross origin resource sharing
app.use(cors());
let db;
app.use(bodyParser.urlencoded({extended:true}));
app.use(bodyParser.json())

//use session
app.use(session({
    secret:'mysessionid'
}))

//static path
app.use(express.static(__dirname+'/public'));
//html
app.set('views','./src/views');
//view engine
app.set('view engine','ejs')

//we connected with mongo database
var mongoClient = new mongodb.MongoClient(url,{useNewUrlParser:true,useUnifiedTopology: true})
mongoClient.connect((err) => {
    if(err) throw err;
    db = mongoClient.db('myblog');
});

app.get('/',(req,res)=>{
    res.render('login')
})

app.get('/health',(req,res)=>{
    res.send("Health Ok")
});

//get all post
app.get('/post',(req,res) => {
    if(!req.session.user) { 
        res.send('No Session found')
    }
    //db.collection('posts').find({name:req.session.user._id})
    db.collection('posts').find().toArray((err,postdata) => {
        if(err) throw err;
        res.send(postdata)
    })
});

app.post('/addpost',(req,res) => {
    if(!req.session.user) { 
        res.send('No Session founds')
    }

    let data = {
        title: req.body.title,
        description:req.body.description, 
        createBy:req.session.user._id,
        name:req.session.user.name
    }

    //console.log(data)
    //res.send(data)
    db.collection('posts').insert(data,(err,result) => {
        if(err) throw err;
        res.send("Post added")
    })

})

//display UI
app.get('/register',(req,res) => {
    res.render('register')
})

//register User
app.post('/register',(req,res) => {
    let user = {
        name:req.body.name,
        email:req.body.email,
        password:req.body.password,
    }
    db.collection('users').insert(user,(err,data)=>{
        res.send("Data Added")
    })
});

app.post('/login',(req,res) => {
    let user = {
        email:req.body.email,
        password:req.body.password 
    }
    db.collection("users").findOne(user,(err,data) => {
        if(err || !data){
            res.send("No User Found")
        }else{
           req.session.user=data;
           res.send("login success")
        }
    });
});

app.get('/logout',(req,res) => {
    req.session.user = null;
    res.send("logout success")
})

app.listen(port,(err) => {
    if(err) throw err;
    console.log(`App is running on port ${port}`)
})